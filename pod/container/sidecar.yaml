# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: myapp
#   labels:
#     app: myapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: myapp
#   template:
#     metadata:
#       labels:
#         app: myapp
#     spec:
#       containers:
#         - name: myapp
#           image: alpine:latest
#           command: ['sh', '-c', 'while true; do echo "logging" >> /opt/logs.txt; sleep 1; done']
#           volumeMounts:
#             - name: data
#               mountPath: /opt
#       initContainers:
#         - name: logshipper
#           image: alpine:latest
#           restartPolicy: Always
#           command: ['sh', '-c', 'tail -F /opt/logs.txt']
#           volumeMounts:
#             - name: data
#               mountPath: /opt
#       volumes:
#         - name: data
#           emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: sidecar
  namespace: default
  # labels:
  #   annotations:
  #     "kubectl.kubernetes.io/default-container":  "sidecar"
  #   app: sidecar
spec:
  containers:
  - name: sidecar
    image: alpine:latest
    command: ['sh', '-c', 'while true; do echo "logging" >> /opt/logs.txt; sleep 1; done']
    ports:
    - containerPort: 80
      name: http
    volumeMounts:
      - name: data
        mountPath: /opt
  initContainers:
    - name: logshipper
      image: alpine:latest
      restartPolicy: Always
      command: ['sh', '-c', 'tail -F /opt/logs.txt']
      # command: ['sh', '-c', 'sleep 5;exit 1']
      volumeMounts:
        - name: data
          mountPath: /opt
    - name: after-sidecar
      image: alpine:3.19
      command: ['sh' , '-c' , "sleep 5"]  
  volumes:
    - name: data
      emptyDir: {}
  restartPolicy: Always
